{
	"name": "PL_Ingest_RawToBronze",
	"properties": {
		"activities": [
			{
				"name": "Get_IMDb_File_Metadata",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Log_Job_Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_adls_raw_folder_csv",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach_RawFiles",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter_New_Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter_New_Files').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Insert_Into_MetaFileLog",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Get_FileSize_Single",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "ls_sql_imdbade",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "INSERT INTO Meta_FileLog (FileName, TableName, FileSizeMB, Status)\nVALUES (\n  '@{item().name}',\n  'IMDb',\n  @{div(activity('Get_FileSize_Single').output.size, 1048576)},\n  'Pending'\n)",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						},
						{
							"name": "Get_FileSize_Single",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_adls_raw_imdb_csv",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@item().name\n",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"size"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Copy_To_Bronze",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Insert_Into_MetaFileLog",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_adls_raw_imdb_csv",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_bronze_imdb_csv",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										},
										"FolderName": {
											"value": "@replace(item().name,'.csv','')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Update_MetaFileLog",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Copy_To_Bronze",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "ls_sql_imdbade",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "UPDATE Meta_FileLog\nSET \n  Status = 'Success'\nWHERE FileID = (select MAX(FileID) from Meta_FileLog)",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			},
			{
				"name": "Log_Job_Start",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "GetLatestIngestedFile",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_sql_imdbade",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "INSERT INTO Meta_JobLog (JobName, PipelineName, StartTime, Status)\nVALUES (\n  'Ingest IMDb File',\n  '@{pipeline().Pipeline}',\n  GETDATE(),\n  'Running'\n)",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Log_Job_End",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ForEach_RawFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_sql_imdbade",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "UPDATE Meta_JobLog\nSET \n  EndTime = GETDATE(),\n  Status = 'Success'\nWHERE JobID = (\n  SELECT MAX(JobID) FROM Meta_JobLog WHERE PipelineName = '@{pipeline().Pipeline}'\n)\n",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Log_Job_Fail",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ForEach_RawFiles",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_sql_imdbade",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "UPDATE Meta_JobLog\nSET \n  EndTime = GETDATE(),\n  Status = 'Failed',\n  ErrorMessage = 'Pipeline Failed'\nWHERE JobID = (\n  SELECT MAX(JobID) FROM Meta_JobLog WHERE PipelineName = '@{pipeline().Pipeline}'\n)",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Send_Success_Email",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Log_Job_End",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Name": {
							"value": "Content-Type",
							"type": "Expression"
						},
						"Value": {
							"value": "application/json",
							"type": "Expression"
						}
					},
					"url": {
						"value": "https://prod-61.eastus.logic.azure.com:443/workflows/875f3cb07af3422aa51373b0bf7f3f1b/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=fGHbN8MQsgyIWXAlWpTwEIuKdA2OEW0JLTiAHHfpfvk",
						"type": "Expression"
					},
					"body": {
						"value": "{\n  \"pipelineName\": \"@{pipeline().Pipeline}\",\n  \"status\": \"Success\",\n  \"errorMessage\": \"\"\n}\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Send_Failure_Email",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Log_Job_Fail",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Name": {
							"value": "Content-Type",
							"type": "Expression"
						},
						"Value": {
							"value": "application/json",
							"type": "Expression"
						}
					},
					"url": {
						"value": "https://prod-61.eastus.logic.azure.com:443/workflows/875f3cb07af3422aa51373b0bf7f3f1b/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=fGHbN8MQsgyIWXAlWpTwEIuKdA2OEW0JLTiAHHfpfvk",
						"type": "Expression"
					},
					"body": {
						"value": "{\n  \"pipelineName\": \"@{pipeline().Pipeline}\",\n  \"status\": \"Failed\",\n  \"errorMessage\": \"Pipeline failed\"\n}\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "GetLatestIngestedFile",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT MAX(LoadDate) AS LastIngestedTime\nFROM Meta_FileLog\nWHERE TableName = 'IMDb'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_sql_MetaFileLog",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Filter_New_Files",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get_IMDb_File_Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get_IMDb_File_Metadata').output.childItems\n",
						"type": "Expression"
					},
					"condition": {
						"value": "@greater(\n  activity('Get_IMDb_File_Metadata').output.lastModified,\n  activity('GetLatestIngestedFile').output.firstRow.LastIngestedTime\n)",
						"type": "Expression"
					}
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2025-04-18T13:00:21Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}