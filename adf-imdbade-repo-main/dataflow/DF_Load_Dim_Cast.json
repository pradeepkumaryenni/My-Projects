{
	"name": "DF_Load_Dim_Cast",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_adls_silver_imdb_csv",
						"type": "DatasetReference"
					},
					"name": "SilverIMDbCastSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_dim_cast",
						"type": "DatasetReference"
					},
					"name": "WriteToDimCast"
				}
			],
			"transformations": [
				{
					"name": "PrepareCastColumns"
				},
				{
					"name": "SelectCastFields"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          title as string,",
				"          vote_average as double,",
				"          vote_count as short,",
				"          status as string,",
				"          release_date as date,",
				"          revenue as integer,",
				"          runtime as short,",
				"          adult as boolean,",
				"          backdrop_path as string,",
				"          budget as integer,",
				"          homepage as string,",
				"          imdb_id as string,",
				"          original_language as string,",
				"          original_title as string,",
				"          overview as string,",
				"          popularity as string,",
				"          poster_path as string,",
				"          tagline as string,",
				"          production_companies as string,",
				"          production_countries as string,",
				"          spoken_languages as string,",
				"          keywords as string,",
				"          release_year as string,",
				"          Director as string,",
				"          AverageRating as string,",
				"          Poster_Link as string,",
				"          Certificate as string,",
				"          IMDB_Rating as string,",
				"          Meta_score as string,",
				"          Star1 as string,",
				"          Star2 as string,",
				"          Star3 as string,",
				"          Star4 as string,",
				"          Writer as string,",
				"          Director_of_Photography as string,",
				"          Producers as string,",
				"          Music_Composer as string,",
				"          genres_list as string,",
				"          Cast_list as string,",
				"          overview_sentiment as string,",
				"          all_combined_keywords as string,",
				"          title_clean as string,",
				"          status_clean as string,",
				"          genres_clean as string,",
				"          overview_clean as string,",
				"          star1_clean as string,",
				"          original_title_clean as string,",
				"          vote_avg_cast as double,",
				"          revenue_cast as double,",
				"          budget_cast as double,",
				"          runtime_cast as short,",
				"          release_dt as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SilverIMDbCastSource",
				"SilverIMDbCastSource derive(StartDate = currentTimestamp(),",
				"          EndDate = toTimestamp('9999-12-31'),",
				"          IsActive = true()) ~> PrepareCastColumns",
				"PrepareCastColumns select(mapColumn(",
				"          star1 = star1_clean,",
				"          Star2,",
				"          Star3,",
				"          Star4,",
				"          Cast_list,",
				"          StartDate,",
				"          EndDate,",
				"          IsActive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCastFields",
				"SelectCastFields sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CastSK as integer,",
				"          Star1 as string,",
				"          Star2 as string,",
				"          Star3 as string,",
				"          Star4 as string,",
				"          CastList as string,",
				"          StartDate as timestamp,",
				"          EndDate as timestamp,",
				"          IsActive as boolean",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> WriteToDimCast"
			]
		}
	}
}